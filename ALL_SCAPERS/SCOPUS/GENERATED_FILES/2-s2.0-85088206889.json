{"Title": "Algebras for Tree Decomposable Graphs", "Year": 2020, "Source": "Lect. Notes Comput. Sci.", "Volume": "12150 LNCS", "Issue": null, "Art.No": null, "PageStart": 203, "PageEnd": 220, "CitedBy": 0, "DOI": "10.1007/978-3-030-51372-6_12", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85088206889&origin=inward", "Abstract": "\u00a9 2020, Springer Nature Switzerland AG.Complex problems can be sometimes solved efficiently via recursive decomposition strategies. In this line, the tree decomposition approach equips problems modelled as graphs with tree-like parsing structures. Following Milner\u2019s flowgraph algebra, in a previous paper two of the authors introduced a strong network algebra to represent open graphs (up to isomorphism), so that homomorphic properties of open graphs can be computed via structural recursion. This paper extends this graphical-algebraic foundation to tree decomposable graphs. The correspondence is shown: (i) on the algebraic side by a loose network algebra, which relaxes the restriction reordering and scope extension axioms of the strong one; and (ii) on the graphical side by Milner\u2019s binding bigraphs, and elementary tree decompositions. Conveniently, an interpreted loose algebra gives the evaluation complexity of each graph decomposition. As a key contribution, we apply our results to dynamic programming (DP). The initial statement of the problem is transformed into a term (this is the secondary optimisation problem of DP). Noting that when the scope extension axiom is applied to reduce the scope of the restriction, then also the complexity is reduced (or not changed), only so-called canonical terms (in the loose algebra) are considered. Then, the canonical term is evaluated obtaining a solution which is locally optimal for complexity. Finding a global optimum remains an NP-hard problem.", "AuthorKeywords": ["Bigraphs", "Graph algebras", "Tree decomposition"], "IndexKeywords": ["Complex problems", "Elementary trees", "Graph decompositions", "Homomorphic property", "Optimisation problems", "Recursive decomposition", "Structural recursion", "Tree decomposition"], "DocumentType": "Book Series", "PublicationStage": null, "OpenAccess": 1, "EID": "2-s2.0-85088206889", "SubjectAreas": [["Theoretical Computer Science", "MATH", "2614"], ["Computer Science (all)", "COMP", "1700"]], "AuthorData": {"7101897781": {"Name": "Bruni R.", "AuthorID": "7101897781", "AffiliationID": "60028868", "AffiliationName": "Dipartimento di Informatica, Universit\u00e0 di Pisa"}, "7004968272": {"Name": "Montanari U.", "AuthorID": "7004968272", "AffiliationID": "60028868", "AffiliationName": "Dipartimento di Informatica, Universit\u00e0 di Pisa"}, "55770025200": {"Name": "Sammartino M.", "AuthorID": "55770025200", "AffiliationID": "60022148", "AffiliationName": "University College London"}}}