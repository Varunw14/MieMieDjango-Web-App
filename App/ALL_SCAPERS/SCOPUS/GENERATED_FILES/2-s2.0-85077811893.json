{"Title": "MOAD: Modeling observation-based approximate dependency", "Year": 2019, "Source": "Proc. - IEEE Int. Work. Conf. Source Code Anal. Manip., SCAM", "Volume": null, "Issue": null, "Art.No": null, "PageStart": 12, "PageEnd": 22, "CitedBy": 2, "DOI": "10.1109/SCAM.2019.00011", "Link": "https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&scp=85077811893&origin=inward", "Abstract": "\u00a9 2019 IEEE.While dependency analysis is foundational to many applications of program analysis, the static nature of many existing techniques presents challenges such as limited scalability and inability to cope with multi-lingual systems. We present a novel dependency analysis technique that aims to approximate program dependency from a relatively small number of perturbed executions. Our technique, called MOAD (Modeling Observation-based Approximate Dependency), reformulates program dependency as the likelihood that one program element is dependent on another, instead of a more classical Boolean relationship. MOAD generates a set of program variants by deleting parts of the source code, and executes them while observing the impacts of the deletions on various program points. From these observations, MOAD infers a model of program dependency that captures the dependency relationship between the modification and observation points. While MOAD is a purely dynamic dependency analysis technique similar to Observation Based Slicing (ORBS), it does not require iterative deletions. Rather, MOAD makes a much smaller number of multiple, independent observations in parallel and infers dependency relationships for multiple program elements simultaneously, significantly reducing the cost of dynamic dependency analysis. We evaluate MOAD by instantiating program slices from the obtained probabilistic dependency model. Compared to ORBS, MOAD's model construction requires only 18.7% of the observations used by ORBS, while its slices are only 16% larger than the corresponding ORBS slice, on average.", "AuthorKeywords": ["Dependency analysis", "Model learning", "Program slicing"], "IndexKeywords": ["Approximate dependencies", "Dependency analysis", "Dependency relationship", "Dynamic dependency", "Iterative deletions", "Model construction", "Model learning", "Program slicing"], "DocumentType": "Conference Proceeding", "PublicationStage": null, "OpenAccess": 2, "EID": "2-s2.0-85077811893", "SubjectAreas": [["Software", "COMP", "1712"], ["Decision Sciences (miscellaneous)", "DECI", "1801"], ["Safety, Risk, Reliability and Quality", "ENGI", "2213"]], "AuthorData": {"8410320800": {"Name": "Lee S.", "AuthorID": "8410320800", "AffiliationID": "60032144", "AffiliationName": "Korea Advanced Institute of Science and Technology"}, "20435019400": {"Name": "Yoo S.", "AuthorID": "20435019400", "AffiliationID": "60032144", "AffiliationName": "Korea Advanced Institute of Science and Technology"}, "7101905317": {"Name": "Binkley D.", "AuthorID": "7101905317", "AffiliationID": "60014693", "AffiliationName": "Loyola University Maryland"}, "24476388300": {"Name": "Feldt R.", "AuthorID": "24476388300", "AffiliationID": "60000990", "AffiliationName": "Chalmers University of Technology"}, "7004798617": {"Name": "Gold N.", "AuthorID": "7004798617", "AffiliationID": "60022148", "AffiliationName": "University College London"}}}